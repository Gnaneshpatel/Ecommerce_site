{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\lco2\\\\prjfrnt\\\\src\\\\components\\\\PaymentB.js\";\nimport React, { useState, useEffect } from 'react';\nimport { loadCart } from '../core/helper/cardHelper';\nimport { Link } from 'react-router-dom';\nimport { getMeToken, processPayment } from '../core/helper/paymentBHelper';\nimport { isAuthenticated } from '../auth/helper';\nimport { createOrder } from '../core/helper/orderHelper';\nimport DropIn from 'braintree-web-drop-in-react';\n\nconst PaymentB = ({\n  products,\n  setReload = f => f,\n  reload = undefined\n}) => {\n  const [info, setInfo] = useState({\n    loading: false,\n    success: false,\n    clientToken: null,\n    error: \"\",\n    instance: {}\n  });\n\n  const userId = isAuthenticated() && isAuthenticated().user._id;\n\n  const token = isAuthenticated() && isAuthenticated().token;\n\n  const getToken = (userId, token) => {\n    getMeToken(userId, token).then(information => {\n      console.log(\"Information:\", information);\n\n      if (information.error) {\n        //console.log(\"hi\");\n        setInfo({ ...info,\n          error: information.error\n        });\n      } else {\n        //console.log(\"hello\");\n        const clientToken = information.clientToken;\n        setInfo({\n          clientToken\n        });\n      }\n    }).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    getToken(userId, token);\n  }, []);\n\n  const showBTDropIn = () => {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, info.clientToken !== null && products.length > 0 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(DropIn, {\n      options: {\n        authorization: info.clientToken\n      },\n      onInstance: instance => info.instance = instance,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-success btn-block\",\n      onClick: () => {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Buy\")) : React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Please login or add something to cart...\"));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"text-center text-black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Payment Section\"), showBTDropIn());\n};\n\nexport default PaymentB;","map":{"version":3,"sources":["D:/projects/lco2/prjfrnt/src/components/PaymentB.js"],"names":["React","useState","useEffect","loadCart","Link","getMeToken","processPayment","isAuthenticated","createOrder","DropIn","PaymentB","products","setReload","f","reload","undefined","info","setInfo","loading","success","clientToken","error","instance","userId","user","_id","token","getToken","then","information","console","log","catch","err","showBTDropIn","length","authorization"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,+BAA3C;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,SAAS,GAAGC,CAAC,IAAIA,CAA7B;AAAgCC,EAAAA,MAAM,GAAGC;AAAzC,CAAD,KAA0D;AAEvE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC;AAC7BiB,IAAAA,OAAO,EAAE,KADoB;AAE7BC,IAAAA,OAAO,EAAE,KAFoB;AAG7BC,IAAAA,WAAW,EAAE,IAHgB;AAI7BC,IAAAA,KAAK,EAAE,EAJsB;AAK7BC,IAAAA,QAAQ,EAAE;AALmB,GAAD,CAAhC;;AAQA,QAAMC,MAAM,GAAGhB,eAAe,MAAMA,eAAe,GAAGiB,IAAlB,CAAuBC,GAA3D;;AACA,QAAMC,KAAK,GAAGnB,eAAe,MAAMA,eAAe,GAAGmB,KAArD;;AAEA,QAAMC,QAAQ,GAAG,CAACJ,MAAD,EAASG,KAAT,KAAmB;AAChCrB,IAAAA,UAAU,CAACkB,MAAD,EAASG,KAAT,CAAV,CAA0BE,IAA1B,CAA+BC,WAAW,IAAI;AAC1CC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,WAA5B;;AACA,UAAIA,WAAW,CAACR,KAAhB,EAAuB;AACnB;AACAJ,QAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWK,UAAAA,KAAK,EAAEQ,WAAW,CAACR;AAA9B,SAAD,CAAP;AACH,OAHD,MAGO;AACH;AACA,cAAMD,WAAW,GAAGS,WAAW,CAACT,WAAhC;AACAH,QAAAA,OAAO,CAAC;AAAEG,UAAAA;AAAF,SAAD,CAAP;AACH;AACJ,KAVD,EAUGY,KAVH,CAUSC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAVhB;AAWH,GAZD;;AAcA/B,EAAAA,SAAS,CAAC,MAAM;AACZyB,IAAAA,QAAQ,CAACJ,MAAD,EAASG,KAAT,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMQ,YAAY,GAAG,MAAM;AACvB,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKlB,IAAI,CAACI,WAAL,KAAqB,IAArB,IAA6BT,QAAQ,CAACwB,MAAT,GAAkB,CAA/C,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AACI,MAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAEpB,IAAI,CAACI;AAAtB,OADb;AAEI,MAAA,UAAU,EAAGE,QAAD,IAAeN,IAAI,CAACM,QAAL,GAAgBA,QAF/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAKI;AAAQ,MAAA,SAAS,EAAC,2BAAlB;AAA8C,MAAA,OAAO,EAAE,MAAM,CAAG,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALJ,CADH,GASO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAVZ,CADJ;AAeH,GAhBD;;AAkBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEKY,YAAY,EAFjB,CADJ;AAMH,CAvDD;;AAyDA,eAAexB,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { loadCart } from '../core/helper/cardHelper';\r\nimport { Link } from 'react-router-dom';\r\nimport { getMeToken, processPayment } from '../core/helper/paymentBHelper';\r\nimport { isAuthenticated } from '../auth/helper';\r\nimport { createOrder } from '../core/helper/orderHelper';\r\nimport DropIn from 'braintree-web-drop-in-react';\r\n\r\nconst PaymentB = ({ products, setReload = f => f, reload = undefined }) => {\r\n\r\n    const [info, setInfo] = useState({\r\n        loading: false,\r\n        success: false,\r\n        clientToken: null,\r\n        error: \"\",\r\n        instance: {}\r\n    });\r\n\r\n    const userId = isAuthenticated() && isAuthenticated().user._id;\r\n    const token = isAuthenticated() && isAuthenticated().token;\r\n\r\n    const getToken = (userId, token) => {\r\n        getMeToken(userId, token).then(information => {\r\n            console.log(\"Information:\", information)\r\n            if (information.error) {\r\n                //console.log(\"hi\");\r\n                setInfo({ ...info, error: information.error })\r\n            } else {\r\n                //console.log(\"hello\");\r\n                const clientToken = information.clientToken;\r\n                setInfo({ clientToken })\r\n            }\r\n        }).catch(err => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        getToken(userId, token);\r\n    }, []);\r\n\r\n    const showBTDropIn = () => {\r\n        return (\r\n            <div>\r\n                {info.clientToken !== null && products.length > 0 ? (\r\n                    <div>\r\n                        <DropIn\r\n                            options={{ authorization: info.clientToken }}\r\n                            onInstance={(instance) => (info.instance = instance)}\r\n                        />\r\n                        <button className=\"btn btn-success btn-block\" onClick={() => { }}>Buy</button>\r\n                    </div>\r\n                ) : (\r\n                        <h3>Please login or add something to cart...</h3>\r\n                    )}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"text-center text-black\">Payment Section</h3>\r\n            {showBTDropIn()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PaymentB;\r\n"]},"metadata":{},"sourceType":"module"}