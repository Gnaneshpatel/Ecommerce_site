{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\lco2\\\\prjfrnt\\\\src\\\\components\\\\PaymentB.js\";\nimport React, { useState, useEffect } from 'react';\nimport { loadCart } from '../core/helper/cardHelper';\nimport { Link } from 'react-router-dom';\nimport { getMeToken, processPayment } from '../core/helper/paymentBHelper';\nimport { isAuthenticated } from '../auth/helper';\nimport { createOrder } from '../core/helper/orderHelper';\n\nconst PaymentB = ({\n  products,\n  setReload = f => f,\n  reload = undefined\n}) => {\n  const [info, setInfo] = useState({\n    loading: false,\n    success: false,\n    clientToken: null,\n    error: \"\"\n  });\n\n  const userId = isAuthenticated() && isAuthenticated().user._id;\n\n  const token = isAuthenticated() && isAuthenticated().token;\n\n  const getToken = (userId, token) => {\n    getMeToken(userId, token).then(res => {\n      if (res.error) {\n        setInfo({ ...info,\n          error: res.error\n        });\n      } else {\n        const clientToken = res.clientToken;\n        setInfo({\n          clientToken\n        });\n      }\n    }).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    getToken(userId, token);\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"text-center text-black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Payment Section\"));\n};\n\nexport default PaymentB;","map":{"version":3,"sources":["D:/projects/lco2/prjfrnt/src/components/PaymentB.js"],"names":["React","useState","useEffect","loadCart","Link","getMeToken","processPayment","isAuthenticated","createOrder","PaymentB","products","setReload","f","reload","undefined","info","setInfo","loading","success","clientToken","error","userId","user","_id","token","getToken","then","res","catch","err","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,+BAA3C;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,WAAT,QAA4B,4BAA5B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,SAAS,GAAGC,CAAC,IAAIA,CAA7B;AAAgCC,EAAAA,MAAM,GAAGC;AAAzC,CAAD,KAA0D;AAEvE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC;AAC7BgB,IAAAA,OAAO,EAAE,KADoB;AAE7BC,IAAAA,OAAO,EAAE,KAFoB;AAG7BC,IAAAA,WAAW,EAAE,IAHgB;AAI7BC,IAAAA,KAAK,EAAE;AAJsB,GAAD,CAAhC;;AAOA,QAAMC,MAAM,GAAGd,eAAe,MAAMA,eAAe,GAAGe,IAAlB,CAAuBC,GAA3D;;AACA,QAAMC,KAAK,GAAGjB,eAAe,MAAMA,eAAe,GAAGiB,KAArD;;AAEA,QAAMC,QAAQ,GAAG,CAACJ,MAAD,EAASG,KAAT,KAAmB;AAChCnB,IAAAA,UAAU,CAACgB,MAAD,EAASG,KAAT,CAAV,CAA0BE,IAA1B,CAA+BC,GAAG,IAAI;AAClC,UAAIA,GAAG,CAACP,KAAR,EAAe;AACXJ,QAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWK,UAAAA,KAAK,EAAEO,GAAG,CAACP;AAAtB,SAAD,CAAP;AACH,OAFD,MAEO;AACH,cAAMD,WAAW,GAAGQ,GAAG,CAACR,WAAxB;AACAH,QAAAA,OAAO,CAAC;AAAEG,UAAAA;AAAF,SAAD,CAAP;AACH;AACJ,KAPD,EAOGS,KAPH,CAOSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPhB;AAQH,GATD;;AAWA3B,EAAAA,SAAS,CAAC,MAAM;AACZuB,IAAAA,QAAQ,CAACJ,MAAD,EAASG,KAAT,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CADJ;AAKH,CAhCD;;AAkCA,eAAef,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { loadCart } from '../core/helper/cardHelper';\r\nimport { Link } from 'react-router-dom';\r\nimport { getMeToken, processPayment } from '../core/helper/paymentBHelper';\r\nimport { isAuthenticated } from '../auth/helper';\r\nimport { createOrder } from '../core/helper/orderHelper';\r\n\r\nconst PaymentB = ({ products, setReload = f => f, reload = undefined }) => {\r\n\r\n    const [info, setInfo] = useState({\r\n        loading: false,\r\n        success: false,\r\n        clientToken: null,\r\n        error: \"\"\r\n    });\r\n\r\n    const userId = isAuthenticated() && isAuthenticated().user._id;\r\n    const token = isAuthenticated() && isAuthenticated().token;\r\n\r\n    const getToken = (userId, token) => {\r\n        getMeToken(userId, token).then(res => {\r\n            if (res.error) {\r\n                setInfo({ ...info, error: res.error })\r\n            } else {\r\n                const clientToken = res.clientToken;\r\n                setInfo({ clientToken })\r\n            }\r\n        }).catch(err => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        getToken(userId, token);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"text-center text-black\">Payment Section</h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PaymentB;\r\n"]},"metadata":{},"sourceType":"module"}