{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\lco2\\\\prjfrnt\\\\src\\\\user\\\\Signin.js\";\nimport React, { useState } from 'react';\nimport Base from '../core/Base';\nimport { Link, Redirect } from 'react-router-dom';\nimport { signin, authenticate, isAuthenticated } from '../auth/helper/index';\n\nconst Signin = () => {\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n    error: \"\",\n    loading: false,\n    didRedirect: false\n  });\n  const {\n    email,\n    password,\n    error,\n    loading,\n    didRedirect\n  } = values;\n  const {\n    user\n  } = isAuthenticated();\n\n  const handleChange = name => event => {\n    setValues({ ...values,\n      error: false,\n      [name]: event.target.value\n    });\n  };\n\n  const performRedirect = () => {\n    if (didRedirect) {\n      if (user && user.role === 1) {\n        return React.createElement(\"p\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, \"redirecting to admin dashbord\");\n      } else {\n        return React.createElement(\"p\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, \"redirecting to user dashbord\");\n      }\n    }\n\n    if (isAuthenticated()) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      });\n    }\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setValues({ ...values,\n      error: false,\n      loading: true\n    });\n    signin({\n      email,\n      password\n    }).then(data => {\n      if (data.error) {\n        setValues({ ...values,\n          error: data.error,\n          loading: false\n        });\n      } else {\n        authenticate(data, () => {\n          setValues({ ...values,\n            didRedirect: true\n          });\n        });\n      }\n    }).catch(error => console.log(error));\n  };\n\n  const loadingMsg = () => {\n    return loading && React.createElement(\"div\", {\n      className: \"alert alert-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"loading...\");\n  };\n\n  const errorMsg = () => {\n    return React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      style: {\n        display: error ? \"\" : \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, error);\n  };\n\n  const SigninForm = () => React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container text-center mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Sign In\")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"exampleInputEmail1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Email address\"), React.createElement(\"input\", {\n    type: \"email\",\n    className: \"form-control\",\n    onChange: handleChange(\"email\"),\n    placeholder: \"Enter email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"small\", {\n    id: \"emailHelp\",\n    className: \"form-text text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"We'll never share your email with anyone else.\")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"exampleInputPassword1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    onChange: handleChange(\"password\"),\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"text-center mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-success alien-center\",\n    onClick: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Submit\")));\n\n  return React.createElement(Base, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, errorMsg(), loadingMsg(), SigninForm(), performRedirect(), React.createElement(\"p\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, JSON.stringify(values)));\n};\n\nexport default Signin;","map":{"version":3,"sources":["D:/projects/lco2/prjfrnt/src/user/Signin.js"],"names":["React","useState","Base","Link","Redirect","signin","authenticate","isAuthenticated","Signin","values","setValues","email","password","error","loading","didRedirect","user","handleChange","name","event","target","value","performRedirect","role","onSubmit","preventDefault","then","data","catch","console","log","loadingMsg","errorMsg","display","SigninForm","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Base from '../core/Base';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { signin, authenticate, isAuthenticated } from '../auth/helper/index';\r\n\r\nconst Signin = () => {\r\n\r\n    const [values, setValues] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        error: \"\",\r\n        loading: false,\r\n        didRedirect: false\r\n    });\r\n\r\n    const { email, password, error, loading, didRedirect } = values;\r\n\r\n    const { user } = isAuthenticated();\r\n\r\n    const handleChange = name => event => {\r\n        setValues({ ...values, error: false, [name]: event.target.value })\r\n    }\r\n\r\n    const performRedirect = () => {\r\n        if (didRedirect) {\r\n            if (user && user.role === 1) {\r\n                return <p className=\"text-center\">redirecting to admin dashbord</p>\r\n            } else {\r\n                return <p className=\"text-center\">redirecting to user dashbord</p>\r\n            }\r\n        }\r\n        if (isAuthenticated()) {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n    }\r\n\r\n    const onSubmit = event => {\r\n        event.preventDefault()\r\n        setValues({ ...values, error: false, loading: true })\r\n        signin({ email, password })\r\n            .then(data => {\r\n                if (data.error) {\r\n                    setValues({ ...values, error: data.error, loading: false })\r\n                } else {\r\n                    authenticate(data, () => {\r\n                        setValues({ ...values, didRedirect: true })\r\n                    })\r\n                }\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n    const loadingMsg = () => {\r\n        return (\r\n            loading && (\r\n                <div className=\"alert alert-info\">\r\n                    loading...\r\n                </div>\r\n            )\r\n        );\r\n    }\r\n\r\n    const errorMsg = () => {\r\n        return (\r\n            <div className=\"alert alert-danger\"\r\n                style={{ display: error ? \"\" : \"none\" }}\r\n            >\r\n                {error}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    const SigninForm = () => (\r\n        <div className=\"container\">\r\n            <div className=\"container text-center mt-3\">\r\n                <h3 className=\"text-muted\">Sign In</h3>\r\n            </div>\r\n            <div className='form-group'>\r\n                <label for='exampleInputEmail1'>Email address</label>\r\n                <input\r\n                    type='email'\r\n                    className='form-control'\r\n                    onChange={handleChange(\"email\")}\r\n                    placeholder='Enter email'\r\n                />\r\n                <small id='emailHelp' className='form-text text-muted'>\r\n                    We'll never share your email with anyone else.\r\n          </small>\r\n            </div>\r\n            <div className='form-group'>\r\n                <label for='exampleInputPassword1'>Password</label>\r\n                <input\r\n                    type='password'\r\n                    className='form-control'\r\n                    onChange={handleChange(\"password\")}\r\n                    placeholder='Password'\r\n                />\r\n            </div>\r\n            <div className=\"text-center mb-3\">\r\n                <button type='submit' className='btn btn-success alien-center' onClick={onSubmit}>\r\n                    Submit\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n    return (\r\n        <Base>\r\n            {errorMsg()}\r\n            {loadingMsg()}\r\n            {SigninForm()}\r\n            {performRedirect()}\r\n            <p className=\"text-center\">{JSON.stringify(values)}</p>\r\n        </Base>\r\n    )\r\n}\r\nexport default Signin;\r\n"]},"metadata":{},"sourceType":"module"}